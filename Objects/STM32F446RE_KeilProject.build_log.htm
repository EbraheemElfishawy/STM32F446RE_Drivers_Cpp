<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Tool Versions:</h2>
IDE-Version: µVision V5.36.0.0
Copyright (C) 2021 ARM Ltd and ARM Germany GmbH. All rights reserved.
License Information: Ebraheem Elfishawy, Ebraheem, LIC=----
 
Tool Versions:
Toolchain:       MDK-Lite  Version: 5.36.0.0
Toolchain Path:  C:\Keil_v5\ARM\ARMCLANG\Bin
C Compiler:      ArmClang.exe V6.16
Assembler:       Armasm.exe V6.16
Linker/Locator:  ArmLink.exe V6.16
Library Manager: ArmAr.exe V6.16
Hex Converter:   FromElf.exe V6.16
CPU DLL:         SARMCM3.DLL V5.36.0.0
Dialog DLL:      DCM.DLL V1.17.3.0
Target DLL:      STLink\ST-LINKIII-KEIL_SWO.dll V3.0.9.0
Dialog DLL:      TCM.DLL V1.53.0.0
 
<h2>Project:</h2>
D:\C++\ARM\STM32F446RE_Drivers_Cpp\STM32F446RE_KeilProject.uvprojx
Project File Date:  06/29/2023

<h2>Output:</h2>
*** Using Compiler 'V6.16', folder: 'C:\Keil_v5\ARM\ARMCLANG\Bin'
Rebuild target 'Stm32F446re'
Note: source file '.\main.cpp' - object file renamed from '.\Objects\main.o' to '.\Objects\main_1.o'.
Note: source file '.\uart.cpp' - object file renamed from '.\Objects\uart.o' to '.\Objects\uart_1.o'.
powerLed.cpp(2): warning: non-portable path to file '"powerLed.h"'; specified path differs in case from file name on disk [-Wnonportable-include-path]
#include "PowerLed.h"
         ^~~~~~~~~~~~
         "powerLed.h"
powerLed.cpp(2): warning: In file included from...
./PowerLed.h(3): warning: non-portable path to file '"led.h"'; specified path differs in case from file name on disk [-Wnonportable-include-path]
#include "Led.h"
         ^~~~~~~
         "led.h"
./PowerLed.h(20): warning: commas at the end of enumerator lists are incompatible with C++98 [-Wc++98-compat-pedantic]
    DIAM_7MM = 7,   /*7mm*/
                ^~
./PowerLed.h(53): warning: C++98 requires newline at end of file [-Wc++98-compat-pedantic]
#endif
      ^
powerLed.cpp(48): warning: C++98 requires newline at end of file [-Wc++98-compat-pedantic]
}
 ^
5 warnings generated.
compiling powerLed.cpp...
uart.cpp(11): warning: use of old-style cast [-Wold-style-cast]
        RCC->APB1ENR |= 1<<17;
        ^~~
./stm32f446re.h(1131): note: expanded from macro 'RCC'
#define RCC                 ((RCC_TypeDef *) RCC_BASE)
                             ^               ~~~~~~~~
uart.cpp(17): warning: use of old-style cast [-Wold-style-cast]
        RCC->AHB1ENR |= 1<<0;
        ^~~
./stm32f446re.h(1131): note: expanded from macro 'RCC'
#define RCC                 ((RCC_TypeDef *) RCC_BASE)
                             ^               ~~~~~~~~
uart.cpp(19): warning: use of old-style cast [-Wold-style-cast]
        GPIOA->AFR[0] &= ~(uint32_t)(0x0000FF00);       /*Clear AFR[0] Low register*/
        ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
uart.cpp(19): warning: use of old-style cast [-Wold-style-cast]
        GPIOA->AFR[0] &= ~(uint32_t)(0x0000FF00);       /*Clear AFR[0] Low register*/
                          ^         ~~~~~~~~~~~~
uart.cpp(20): warning: use of old-style cast [-Wold-style-cast]
        GPIOA->AFR[0] |=  (uint32_t)(0x00000700); /*AFR[0] Low register: PA2: USART4_TX*/
        ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
uart.cpp(20): warning: use of old-style cast [-Wold-style-cast]
        GPIOA->AFR[0] |=  (uint32_t)(0x00000700); /*AFR[0] Low register: PA2: USART4_TX*/
                          ^         ~~~~~~~~~~~~
uart.cpp(21): warning: use of old-style cast [-Wold-style-cast]
        GPIOA->AFR[0] |=  (uint32_t)(0x00007000); /*AFR[0] Low register: PA3: USART4_RX*/
        ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
uart.cpp(21): warning: use of old-style cast [-Wold-style-cast]
        GPIOA->AFR[0] |=  (uint32_t)(0x00007000); /*AFR[0] Low register: PA3: USART4_RX*/
                          ^         ~~~~~~~~~~~~
uart.cpp(23): warning: use of old-style cast [-Wold-style-cast]
        GPIOA->MODER  &= ~(uint32_t)(0x000000F0);
        ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
uart.cpp(23): warning: use of old-style cast [-Wold-style-cast]
        GPIOA->MODER  &= ~(uint32_t)(0x000000F0);
                          ^         ~~~~~~~~~~~~
uart.cpp(24): warning: use of old-style cast [-Wold-style-cast]
        GPIOA->MODER  |=  (uint32_t)(0x00000020);       /*PA3 as alternate function*/
        ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
uart.cpp(24): warning: use of old-style cast [-Wold-style-cast]
        GPIOA->MODER  |=  (uint32_t)(0x00000020);       /*PA3 as alternate function*/
                          ^         ~~~~~~~~~~~~
uart.cpp(25): warning: use of old-style cast [-Wold-style-cast]
        GPIOA->MODER  |=  (uint32_t)(0x00000080);       /*PA2 as alternate function*/
        ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
uart.cpp(25): warning: use of old-style cast [-Wold-style-cast]
        GPIOA->MODER  |=  (uint32_t)(0x00000080);       /*PA2 as alternate function*/
                          ^         ~~~~~~~~~~~~
uart.cpp(27): warning: use of old-style cast [-Wold-style-cast]
        USART2->BRR   |= 0x0683;
        ^~~~~~
./stm32f446re.h(1084): note: expanded from macro 'USART2'
#define USART2              ((USART_TypeDef *) USART2_BASE)
                             ^                 ~~~~~~~~~~~
uart.cpp(28): warning: use of old-style cast [-Wold-style-cast]
        USART2->CR1   |= 0x000C;/*Enable TX(Bit 3 TE: Transmitter enable = 1) and RX(Bit 2 RE: Receiver enable = 1)*/
        ^~~~~~
./stm32f446re.h(1084): note: expanded from macro 'USART2'
#define USART2              ((USART_TypeDef *) USART2_BASE)
                             ^                 ~~~~~~~~~~~
uart.cpp(29): warning: use of old-style cast [-Wold-style-cast]
        USART2->CR2   |= 0x0000;/*Enable 1 stop bit( Bits 13:12 STOP: STOP bits = 00)*/
        ^~~~~~
./stm32f446re.h(1084): note: expanded from macro 'USART2'
#define USART2              ((USART_TypeDef *) USART2_BASE)
                             ^                 ~~~~~~~~~~~
uart.cpp(30): warning: use of old-style cast [-Wold-style-cast]
        USART2->CR3   |= 0x0000;
        ^~~~~~
./stm32f446re.h(1084): note: expanded from macro 'USART2'
#define USART2              ((USART_TypeDef *) USART2_BASE)
                             ^                 ~~~~~~~~~~~
uart.cpp(31): warning: use of old-style cast [-Wold-style-cast]
        USART2->CR1   |= 0x2000;/*Finally enble USART2(bit 13 UE: USART enable = 1)*/
        ^~~~~~
./stm32f446re.h(1084): note: expanded from macro 'USART2'
#define USART2              ((USART_TypeDef *) USART2_BASE)
                             ^                 ~~~~~~~~~~~
uart.cpp(35): warning: use of old-style cast [-Wold-style-cast]
        while(!(USART2->SR & 0x0080)){}
                ^~~~~~
./stm32f446re.h(1084): note: expanded from macro 'USART2'
#define USART2              ((USART_TypeDef *) USART2_BASE)
                             ^                 ~~~~~~~~~~~
uart.cpp(36): warning: use of old-style cast [-Wold-style-cast]
        USART2->DR = (ch & 0xFF);
        ^~~~~~
./stm32f446re.h(1084): note: expanded from macro 'USART2'
#define USART2              ((USART_TypeDef *) USART2_BASE)
                             ^                 ~~~~~~~~~~~
uart.cpp(41): warning: use of old-style cast [-Wold-style-cast]
        while(!(USART2->SR & 0x0020)){}
                ^~~~~~
./stm32f446re.h(1084): note: expanded from macro 'USART2'
#define USART2              ((USART_TypeDef *) USART2_BASE)
                             ^                 ~~~~~~~~~~~
uart.cpp(42): warning: use of old-style cast [-Wold-style-cast]
        return (uint16_t)(USART2->DR);
                          ^~~~~~
./stm32f446re.h(1084): note: expanded from macro 'USART2'
#define USART2              ((USART_TypeDef *) USART2_BASE)
                             ^                 ~~~~~~~~~~~
uart.cpp(42): warning: use of old-style cast [-Wold-style-cast]
        return (uint16_t)(USART2->DR);
               ^         ~~~~~~~~~~~~
24 warnings generated.
compiling uart.cpp...
assembling startup_stm32f446xx.s...
main.cpp(7): warning: no previous extern declaration for non-static variable 'LedRed' [-Wmissing-variable-declarations]
   Led LedRed(RED,ON);                      /*1- Static allocation*/
       ^
main.cpp(7): note: declare 'static' if the variable is not intended to be used outside of this translation unit
   Led LedRed(RED,ON);                      /*1- Static allocation*/
   ^
main.cpp(7): warning: declaration requires a global constructor [-Wglobal-constructors]
   Led LedRed(RED,ON);                      /*1- Static allocation*/
       ^~~~~~~~~~~~~~
main.cpp(8): warning: no previous extern declaration for non-static variable 'LedBuiltIn' [-Wmissing-variable-declarations]
         Led LedBuiltIn(BUILTIN,ON);                      /*1- Static allocation*/
             ^
main.cpp(8): note: declare 'static' if the variable is not intended to be used outside of this translation unit
         Led LedBuiltIn(BUILTIN,ON);                      /*1- Static allocation*/
         ^
main.cpp(8): warning: declaration requires a global constructor [-Wglobal-constructors]
         Led LedBuiltIn(BUILTIN,ON);                      /*1- Static allocation*/
             ^~~~~~~~~~~~~~~~~~~~~~
main.cpp(9): warning: no previous extern declaration for non-static variable 'LedRedState' [-Wmissing-variable-declarations]
   LedState_Type LedRedState;
                 ^
main.cpp(9): note: declare 'static' if the variable is not intended to be used outside of this translation unit
   LedState_Type LedRedState;
   ^
main.cpp(10): warning: no previous extern declaration for non-static variable 'LedGreenState' [-Wmissing-variable-declarations]
   LedState_Type LedGreenState;
                 ^
main.cpp(10): note: declare 'static' if the variable is not intended to be used outside of this translation unit
   LedState_Type LedGreenState;
   ^
main.cpp(11): warning: no previous extern declaration for non-static variable 'LedBlueState' [-Wmissing-variable-declarations]
   LedState_Type LedBlueState;
                 ^
main.cpp(11): note: declare 'static' if the variable is not intended to be used outside of this translation unit
   LedState_Type LedBlueState;
   ^
main.cpp(64): warning: C++98 requires newline at end of file [-Wc++98-compat-pedantic]
#endif
      ^
8 warnings generated.
compiling main.cpp...
rcc.cpp(8): warning: use of old-style cast [-Wold-style-cast]
RCC_TypeDef* RCC_MemoryMapBase = (RCC_TypeDef*) RCC_BASE;
                                 ^              ~~~~~~~~
rcc.cpp(8): warning: no previous extern declaration for non-static variable 'RCC_MemoryMapBase' [-Wmissing-variable-declarations]
RCC_TypeDef* RCC_MemoryMapBase = (RCC_TypeDef*) RCC_BASE;
             ^
rcc.cpp(8): note: declare 'static' if the variable is not intended to be used outside of this translation unit
RCC_TypeDef* RCC_MemoryMapBase = (RCC_TypeDef*) RCC_BASE;
^
rcc.cpp(56): warning: default label in switch which covers all enumeration values [-Wcovered-switch-default]
                default:
                ^
rcc.cpp(61): warning: C++98 requires newline at end of file [-Wc++98-compat-pedantic]
}
 ^
4 warnings generated.
compiling rcc.cpp...
gpio.cpp(1): warning: In file included from...
./gpio.h(61): warning: C++98 requires newline at end of file [-Wc++98-compat-pedantic]
#endif
      ^
gpio.cpp(3): warning: no previous extern declaration for non-static variable 'GPIO_rcc_object' [-Wmissing-variable-declarations]
rcc GPIO_rcc_object;
    ^
gpio.cpp(3): note: declare 'static' if the variable is not intended to be used outside of this translation unit
rcc GPIO_rcc_object;
^
gpio.cpp(3): warning: declaration requires a global constructor [-Wglobal-constructors]
rcc GPIO_rcc_object;
    ^~~~~~~~~~~~~~~
gpio.cpp(18): warning: use of old-style cast [-Wold-style-cast]
                                GPIO_rcc_object.RCC_gpioPortInit((RCC_GpioPortName_t) PortName);
                                                                 ^                    ~~~~~~~~
gpio.cpp(21): warning: default label in switch which covers all enumeration values [-Wcovered-switch-default]
                        default:
                        ^
gpio.cpp(37): warning: use of old-style cast [-Wold-style-cast]
        if((pinConfigs != (GPIO_PinConfigs*)NULL) && (gpioErr == GPIO_OK))
                          ^                 ~~~~
gpio.cpp(37): warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
        if((pinConfigs != (GPIO_PinConfigs*)NULL) && (gpioErr == GPIO_OK))
                                            ^~~~
                                            nullptr
C:\Keil_v5\ARM\ARMCLANG\Bin\..\include\stdio.h(61): note: expanded from macro 'NULL'
#define NULL 0                   /* see <stddef.h> */
             ^
gpio.cpp(52): warning: use of old-style cast [-Wold-style-cast]
        if((pinConfigs != (GPIO_PinConfigs*)NULL) && (gpioErr == GPIO_OK))      {
                          ^                 ~~~~
gpio.cpp(52): warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
        if((pinConfigs != (GPIO_PinConfigs*)NULL) && (gpioErr == GPIO_OK))      {
                                            ^~~~
                                            nullptr
C:\Keil_v5\ARM\ARMCLANG\Bin\..\include\stdio.h(61): note: expanded from macro 'NULL'
#define NULL 0                   /* see <stddef.h> */
             ^
gpio.cpp(49): warning: unused parameter 'pinState' [-Wunused-parameter]
GPIO_ErrorType_t  gpio::GPIO_PinStateSet(GPIO_PinConfigs* pinConfigs, GPIO_PinState_t pinState)
                                                                                      ^
gpio.cpp(65): warning: use of old-style cast [-Wold-style-cast]
        if((pinConfigs != (GPIO_PinConfigs*)NULL) && (gpioErr == GPIO_OK))      {
                          ^                 ~~~~
gpio.cpp(65): warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
        if((pinConfigs != (GPIO_PinConfigs*)NULL) && (gpioErr == GPIO_OK))      {
                                            ^~~~
                                            nullptr
C:\Keil_v5\ARM\ARMCLANG\Bin\..\include\stdio.h(61): note: expanded from macro 'NULL'
#define NULL 0                   /* see <stddef.h> */
             ^
gpio.cpp(74): warning: C++98 requires newline at end of file [-Wc++98-compat-pedantic]
}
 ^
13 warnings generated.
compiling gpio.cpp...
led.cpp(1): warning: non-portable path to file '"led.h"'; specified path differs in case from file name on disk [-Wnonportable-include-path]
#include "Led.h"
         ^~~~~~~
         "led.h"
led.cpp(12): warning: use of old-style cast [-Wold-style-cast]
                RCC->AHB1ENR |= LED_PORT_CLOCK;
                ^~~
./stm32f446re.h(1131): note: expanded from macro 'RCC'
#define RCC                 ((RCC_TypeDef *) RCC_BASE)
                             ^               ~~~~~~~~
led.cpp(17): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->MODER |=  (uint32_t)(LED_RED_MODE_BIT);
                        ^~~~~~~~
./Led.h(7): note: expanded from macro 'LED_PORT'
#define LED_PORT                                GPIOA           /*All leds are connected to GPIOA*/
                                                ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
led.cpp(17): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->MODER |=  (uint32_t)(LED_RED_MODE_BIT);
                                            ^         ~~~~~~~~~~~~~~~~~~
led.cpp(19): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->ODR   &= ~(uint32_t)(1<<LED_RED_PIN);
                        ^~~~~~~~
./Led.h(7): note: expanded from macro 'LED_PORT'
#define LED_PORT                                GPIOA           /*All leds are connected to GPIOA*/
                                                ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
led.cpp(19): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->ODR   &= ~(uint32_t)(1<<LED_RED_PIN);
                                            ^         ~~~~~~~~~~~~~~~~
led.cpp(20): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->ODR   |=  (uint32_t)((this->state) << (LED_RED_PIN));
                        ^~~~~~~~
./Led.h(7): note: expanded from macro 'LED_PORT'
#define LED_PORT                                GPIOA           /*All leds are connected to GPIOA*/
                                                ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
led.cpp(20): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->ODR   |=  (uint32_t)((this->state) << (LED_RED_PIN));
                                            ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
led.cpp(24): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->MODER |=  (uint32_t)(LED_GREEN_MODE_BIT);
                        ^~~~~~~~
./Led.h(7): note: expanded from macro 'LED_PORT'
#define LED_PORT                                GPIOA           /*All leds are connected to GPIOA*/
                                                ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
led.cpp(24): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->MODER |=  (uint32_t)(LED_GREEN_MODE_BIT);
                                            ^         ~~~~~~~~~~~~~~~~~~~~
led.cpp(26): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->ODR   &= ~(uint32_t)(1<<LED_GREEN_PIN);
                        ^~~~~~~~
./Led.h(7): note: expanded from macro 'LED_PORT'
#define LED_PORT                                GPIOA           /*All leds are connected to GPIOA*/
                                                ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
led.cpp(26): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->ODR   &= ~(uint32_t)(1<<LED_GREEN_PIN);
                                            ^         ~~~~~~~~~~~~~~~~~~
led.cpp(27): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->ODR   |=  (uint32_t)((this->state) << (LED_GREEN_PIN));
                        ^~~~~~~~
./Led.h(7): note: expanded from macro 'LED_PORT'
#define LED_PORT                                GPIOA           /*All leds are connected to GPIOA*/
                                                ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
led.cpp(27): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->ODR   |=  (uint32_t)((this->state) << (LED_GREEN_PIN));
                                            ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
led.cpp(31): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->MODER |=  (uint32_t)(LED_BLUE_MODE_BIT);
                        ^~~~~~~~
./Led.h(7): note: expanded from macro 'LED_PORT'
#define LED_PORT                                GPIOA           /*All leds are connected to GPIOA*/
                                                ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
led.cpp(31): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->MODER |=  (uint32_t)(LED_BLUE_MODE_BIT);
                                            ^         ~~~~~~~~~~~~~~~~~~~
led.cpp(33): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->ODR   &= ~(uint32_t)(1<<LED_BLUE_PIN);
                        ^~~~~~~~
./Led.h(7): note: expanded from macro 'LED_PORT'
#define LED_PORT                                GPIOA           /*All leds are connected to GPIOA*/
                                                ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
led.cpp(33): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->ODR   &= ~(uint32_t)(1<<LED_BLUE_PIN);
                                            ^         ~~~~~~~~~~~~~~~~~
led.cpp(34): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->ODR   |=  (uint32_t)((this->state) << (LED_BLUE_PIN));
                        ^~~~~~~~
./Led.h(7): note: expanded from macro 'LED_PORT'
#define LED_PORT                                GPIOA           /*All leds are connected to GPIOA*/
                                                ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
led.cpp(34): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->ODR   |=  (uint32_t)((this->state) << (LED_BLUE_PIN));
                                            ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
led.cpp(38): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->MODER |=  (uint32_t)(LED_BUILTIN_MODE_BIT);
                        ^~~~~~~~
./Led.h(7): note: expanded from macro 'LED_PORT'
#define LED_PORT                                GPIOA           /*All leds are connected to GPIOA*/
                                                ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
led.cpp(38): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->MODER |=  (uint32_t)(LED_BUILTIN_MODE_BIT);
                                            ^         ~~~~~~~~~~~~~~~~~~~~~~
led.cpp(40): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->ODR   &= ~(uint32_t)(1<<LED_BUILTIN_PIN);
                        ^~~~~~~~
./Led.h(7): note: expanded from macro 'LED_PORT'
#define LED_PORT                                GPIOA           /*All leds are connected to GPIOA*/
                                                ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
led.cpp(40): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->ODR   &= ~(uint32_t)(1<<LED_BUILTIN_PIN);
                                            ^         ~~~~~~~~~~~~~~~~~~~~
led.cpp(41): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->ODR   |=  (uint32_t)((this->state) << (LED_BUILTIN_PIN));
                        ^~~~~~~~
./Led.h(7): note: expanded from macro 'LED_PORT'
#define LED_PORT                                GPIOA           /*All leds are connected to GPIOA*/
                                                ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
led.cpp(41): warning: use of old-style cast [-Wold-style-cast]
                        LED_PORT->ODR   |=  (uint32_t)((this->state) << (LED_BUILTIN_PIN));
                                            ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
led.cpp(43): warning: default label in switch which covers all enumeration values [-Wcovered-switch-default]
    default:
    ^
led.cpp(54): warning: use of old-style cast [-Wold-style-cast]
        LED_PORT->ODR   &= ~(uint32_t)(1<<LED_RED_PIN);
        ^~~~~~~~
./Led.h(7): note: expanded from macro 'LED_PORT'
#define LED_PORT                                GPIOA           /*All leds are connected to GPIOA*/
                                                ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
led.cpp(54): warning: use of old-style cast [-Wold-style-cast]
        LED_PORT->ODR   &= ~(uint32_t)(1<<LED_RED_PIN);
                            ^         ~~~~~~~~~~~~~~~~
led.cpp(55): warning: use of old-style cast [-Wold-style-cast]
                LED_PORT->ODR   |=  (uint32_t)((this->state) << (LED_RED_PIN)); break;
                ^~~~~~~~
./Led.h(7): note: expanded from macro 'LED_PORT'
#define LED_PORT                                GPIOA           /*All leds are connected to GPIOA*/
                                                ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
led.cpp(55): warning: use of old-style cast [-Wold-style-cast]
                LED_PORT->ODR   |=  (uint32_t)((this->state) << (LED_RED_PIN)); break;
                                    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
led.cpp(57): warning: use of old-style cast [-Wold-style-cast]
        LED_PORT->ODR   &= ~(uint32_t)(1<<LED_GREEN_PIN);
        ^~~~~~~~
./Led.h(7): note: expanded from macro 'LED_PORT'
#define LED_PORT                                GPIOA           /*All leds are connected to GPIOA*/
                                                ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
led.cpp(57): warning: use of old-style cast [-Wold-style-cast]
        LED_PORT->ODR   &= ~(uint32_t)(1<<LED_GREEN_PIN);
                            ^         ~~~~~~~~~~~~~~~~~~
led.cpp(58): warning: use of old-style cast [-Wold-style-cast]
                LED_PORT->ODR   |=  (uint32_t)((this->state) << (LED_GREEN_PIN));
                ^~~~~~~~
./Led.h(7): note: expanded from macro 'LED_PORT'
#define LED_PORT                                GPIOA           /*All leds are connected to GPIOA*/
                                                ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
led.cpp(58): warning: use of old-style cast [-Wold-style-cast]
                LED_PORT->ODR   |=  (uint32_t)((this->state) << (LED_GREEN_PIN));
                                    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
led.cpp(61): warning: use of old-style cast [-Wold-style-cast]
        LED_PORT->ODR   &= ~(uint32_t)(1<<LED_BLUE_PIN);
        ^~~~~~~~
./Led.h(7): note: expanded from macro 'LED_PORT'
#define LED_PORT                                GPIOA           /*All leds are connected to GPIOA*/
                                                ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
led.cpp(61): warning: use of old-style cast [-Wold-style-cast]
        LED_PORT->ODR   &= ~(uint32_t)(1<<LED_BLUE_PIN);
                            ^         ~~~~~~~~~~~~~~~~~
led.cpp(62): warning: use of old-style cast [-Wold-style-cast]
                LED_PORT->ODR   |=  (uint32_t)((this->state) << (LED_BLUE_PIN));
                ^~~~~~~~
./Led.h(7): note: expanded from macro 'LED_PORT'
#define LED_PORT                                GPIOA           /*All leds are connected to GPIOA*/
                                                ^~~~~
./stm32f446re.h(1122): note: expanded from macro 'GPIOA'
#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
                             ^                ~~~~~~~~~~
led.cpp(62): warning: use of old-style cast [-Wold-style-cast]
                LED_PORT->ODR   |=  (uint32_t)((this->state) << (LED_BLUE_PIN));
                                    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
led.cpp(51): warning: enumeration value 'BUILTIN' not explicitly handled in switch [-Wswitch-enum]
    switch (this->color)
            ^
led.cpp(70): warning: enumeration value 'BUILTIN' not explicitly handled in switch [-Wswitch-enum]
        switch (this->color)
                ^
led.cpp(79): warning: C++98 requires newline at end of file [-Wc++98-compat-pedantic]
}
 ^
42 warnings generated.
compiling led.cpp...
compiling system_stm32f4xx.c...
linking...
Program Size: Code=1540 RO-data=476 RW-data=0 ZI-data=1648  
FromELF: creating hex file...
".\Objects\STM32F446RE_KeilProject.axf" - 0 Error(s), 96 Warning(s).

<h2>Software Packages used:</h2>

Package Vendor: ARM
                http://www.keil.com/pack/ARM.CMSIS.5.9.0.pack
                ARM.CMSIS.5.9.0
                CMSIS (Common Microcontroller Software Interface Standard)
   * Component: CORE Version: 5.6.0

Package Vendor: Keil
                http://www.keil.com/pack/Keil.STM32F4xx_DFP.2.16.0.pack
                Keil.STM32F4xx_DFP.2.16.0
                STMicroelectronics STM32F4 Series Device Support, Drivers and Examples
   * Component: Startup Version: 2.6.3

<h2>Collection of Component include folders:</h2>
  .\RTE\_Stm32F446re
  C:\Users\ebrah\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include
  C:\Users\ebrah\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.16.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include

<h2>Collection of Component Files used:</h2>

   * Component: ARM::CMSIS:CORE:5.6.0

   * Component: Keil::Device:Startup:2.6.3
      Source file:   MDK\Device\Source\ARM\STM32F446xx_OPT.s
      Source file:   MDK\Device\Source\ARM\STM32F4xx_OTP.s
      Include file:  Drivers\CMSIS\Device\ST\STM32F4xx\Include\stm32f4xx.h
      Source file:   Drivers\CMSIS\Device\ST\STM32F4xx\Source\Templates\arm\startup_stm32f446xx.s
      Source file:   Drivers\CMSIS\Device\ST\STM32F4xx\Source\Templates\system_stm32f4xx.c
Build Time Elapsed:  00:00:07
</pre>
</body>
</html>
